@page "/"

@using _20strike_ui.Data
@inject WebsiteAuthenticator wa
@inject NavigationManager nm

<PageTitle>Index</PageTitle>

<h1>IT-ресурсы Вяземского Машиностроительного Завода.</h1>

<form method="post">
    <div class="container border p-3">
        <div>
            <AuthorizeView Context="Account">
                <NotAuthorized>
                    <b>Not hello</b>
                </NotAuthorized>
                <Authorized>
                    <b>Hello, @name</b>
                </Authorized>
            </AuthorizeView>
        </div>
        <div class="row my-3">
            <div class="col-md">
                <input @bind="username" @bind:event="oninput" class="form-control" placeholder="User name" />
            </div>
        </div>
        <div class="row my-3">
            <div class="col-md">
                <input type="password" @bind="password" @bind:event="oninput" class="form-control" placeholder="Password" />
            </div>
        </div>
        <div class="row">
            <div class="col-md">
                <input type="button" class="btn btn-primary" value="Login" @onclick="login">
                <input type="button" class="btn btn-primary" value="Logout" @onclick="logout">
            </div>
        </div>
    </div>
</form>

<style>
    .col-md {
        max-width: 400px;
    }
</style>

@code {
    [Parameter]
    public string username { get; set; } = "";
    [Parameter]
    public string password { get; set; } = "";

    private string name = "123123";

    public async void login()
    {
        await wa.LoginAsync(username, password);
        nm.NavigateTo("/", true);
    }

    public async void logout()
    {
        await wa.LogoutAsync();
        nm.NavigateTo("/", true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        name = await wa.Who();
        StateHasChanged();
    }
}
